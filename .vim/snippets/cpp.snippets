extends c
##### main
snippet mainargs
	int main(int argc, char **argv)
	{
		${0}
		return 0;
	}
snippet main
	int main(int, char**)
	{
		${0}
		return 0;
	}
##### libs
# io
snippet io
	#include <iostream>$0
# std
snippet string
	#include <string>$0
# iterator
snippet iter
	#include <iterator>$0
# algorithm
snippet alg
	#include <algorithm>$0
##### function
# cout
snippet cout
	std::cout << $0
# cin
snippet cin
	std::cin >> $0
# endl
snippet endl
	std::endl$0
##### headerfiles and preprocessor
snippet guard
	#ifndef `toupper(expand('%:r'))`
	#define `toupper(expand('%:r'))`

	$0

	#endif
##### classes
snippet class
	class $1
	{
		private:
			$0

		public:
			$1() = default;
			~$1() = default;
	};
##### functions
snippet copy
	std::copy(${1:begin}, ${2:end}, ${3:iter_dest});$0
##### iterator
snippet ossit
	std::ostream_iterator<${1:type}>(std::cout, "\n");$0
##### operator
# <<
snippet op<<
	std::ostream& operator<<(std::ostream& os, const ${1:Obj}& ${2:obj}) {
		$0
		return os;
	}
# <
snippet op<
	bool operator<const ${1:Obj} &${2:obj}) const {
		$0
	}
# >
snippet op>
	bool operator>const ${1:Obj} &${2:obj}) const {
		$0
	}
# ==
snippet op==
	bool operator==(const ${1:Obj} &${2:obj}) const {
		$0
	}
# +
snippet op+
	${1:Obj} operator+(const ${1:Obj} &a, const ${1:Obj} &b) {
		$0
	}
